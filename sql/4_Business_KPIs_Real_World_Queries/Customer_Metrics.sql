
-- Day 4: Customer Metrics - KPIs
-- Goal: Generate a comprehensive, unified view of customer behavior and value.
-- Dataset: Kaggle Ecommerce Dataset

-- Key Metrics Included:
-- 1. total_spend       → Total revenue generated by the customer
-- 2. total_orders      → Total number of distinct orders placed
-- 3. spend_bracket     → Customer segmentation by total spend (VIP, Regular, Occasional, One-off)
-- 4. repeat_customer   → Flag for customers who purchased in consecutive months
-- 5. consecutive_months→ Number of consecutive-month purchase sequences
-- 6. churn_customer    → Flag for customers who purchased only once


WITH total_customer_spend AS (
    SELECT
        o."CustomerID",
        ROUND(SUM(oi."Quantity" * p."UnitPrice"), 2) AS total_spend,
        COUNT(DISTINCT o."InvoiceNo") AS total_orders
    FROM kaggle_orders o
    INNER JOIN kaggle_order_items oi
        ON o."InvoiceNo" = oi."InvoiceNo"
    INNER JOIN kaggle_products p
        ON oi."StockCode" = p."StockCode"
    WHERE o."CustomerID" <> ''
        AND oi."Quantity" > 0
    GROUP BY o."CustomerID"
),

months_per_customer AS (
    SELECT
        "CustomerID",
        (EXTRACT(YEAR FROM DATE_TRUNC('month', "InvoiceDate")) * 12
         + EXTRACT(MONTH FROM DATE_TRUNC('month', "InvoiceDate"))) AS month_number,
        LAG(EXTRACT(YEAR FROM DATE_TRUNC('month', "InvoiceDate")) * 12
            + EXTRACT(MONTH FROM DATE_TRUNC('month', "InvoiceDate"))) 
        OVER (PARTITION BY "CustomerID" ORDER BY DATE_TRUNC('month', "InvoiceDate")) AS prev_month
    FROM kaggle_orders
    WHERE "CustomerID" <> ''
),

repeat_customers AS (
    SELECT "CustomerID",
           COUNT(*) AS consecutive_month_count
    FROM months_per_customer
    WHERE month_number - prev_month = 1
    GROUP BY "CustomerID"
),

churn_customers AS (
    SELECT "CustomerID"
    FROM kaggle_orders
    GROUP BY "CustomerID"
    HAVING COUNT(DISTINCT "InvoiceNo") = 1
)

SELECT 
    tcs."CustomerID",
    tcs.total_spend,
    tcs.total_orders,
    CASE
        WHEN tcs.total_spend >= 10000 THEN 'VIP'
        WHEN tcs.total_spend < 10000 AND tcs.total_spend >= 5000 THEN 'REGULAR BUYER'
        WHEN tcs.total_spend < 5000 AND tcs.total_spend >= 1000 THEN 'OCCASIONAL BUYER'
        ELSE 'ONE-OFF'
    END AS spend_bracket,
    CASE WHEN rc."CustomerID" IS NOT NULL THEN TRUE ELSE FALSE END AS repeat_customer,
    COALESCE(rc.consecutive_month_count, 0) AS consecutive_months,
    CASE WHEN cc."CustomerID" IS NOT NULL THEN TRUE ELSE FALSE END AS churn_customer
FROM total_customer_spend tcs
LEFT JOIN repeat_customers rc
    ON tcs."CustomerID" = rc."CustomerID"
LEFT JOIN churn_customers cc
    ON tcs."CustomerID" = cc."CustomerID"
ORDER BY tcs.total_spend DESC, tcs.total_orders DESC;
